{"version":3,"sources":["Components/InputField.js","Components/Content.js","Components/Footer.js","Views/Round1.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["InputField","isPortrait","useMediaQuery","query","classes","makeStyles","theme","root","width","color","borderBottomColor","borderColor","useStyles","React","useState","value","setValue","correct","setCorrect","style","marginBottom","className","noValidate","autoComplete","TextField","id","label","placeholder","onChange","event","target","inputProps","multiline","display","justifyContent","margin","Button","variant","button","endIcon","onClick","toLowerCase","toString","process","console","log","NotificationManager","success","error","href","disabled","withStyles","createStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","TableRow","createData","name","calories","table","minWidth","Content","textAlign","Footer","flexDirection","border","padding","Round1","top","delay","bottom","Component","Routes","props","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dcde7187.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n\tNotificationManager,\n} from \"react-notifications\";\n\nconst InputField = () => {\n\tconst isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\troot: {\n\t\t\t\"& .MuiTextField-root\": {\n\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\tcolor: \"white\",\n\t\t\t},\n\t\t\t\"& .MuiInputLabel-root\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\n\t\t\t\"& label.Mui-focused\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiInput-underline:after\": {\n\t\t\t\tborderBottomColor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiOutlinedInput-root\": {\n\t\t\t\t\"& fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&:hover fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&.Mui-focused fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(\"\");\n\tconst [correct, setCorrect] = React.useState(false);\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t};\n\tconst handleAnswer = () => {\n\t\tif (value.toLowerCase().toString() === process.env.REACT_APP_ANSWER.toLowerCase().toString()) {\n\t\t\tsetCorrect(true);\n\t\t\tconsole.log(value);\n\t\t\tNotificationManager.success(\n\t\t\t\t\"Click on Next Round\",\n\t\t\t\t\"Correct Answer\"\n\t\t\t);\n\t\t} else {\n\t\t\tsetCorrect(false);\n\t\t\tNotificationManager.error(\"Keep Trying\", \"Wrong Answer\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{marginBottom:50}}>\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"standard-textarea\"\n\t\t\t\t\tlabel=\"Enter the Answer here\"\n\t\t\t\t\tplaceholder=\"Answer\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tinputProps={{ style: { color: \"white\" } }}\n\t\t\t\t\tmultiline\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\t\t\tmargin: \"auto\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tendIcon={<CloudUploadIcon />}\n\t\t\t\t\t\tonClick={handleAnswer}\n\t\t\t\t\t>\n\t\t\t\t\t\tVerify Answer\n\t\t\t\t\t</Button>\n\t\t\t\t\t{correct ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\thref={process.env.REACT_APP_NEXT_ROUND}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext Round\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t\t\t\t\tcolor: \"#69779b\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAnswer to activate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  withStyles,\n  Theme,\n  createStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: \"Theme\") =>\n  createStyles({\n    root: {\n      backgroundColor: \"#272c34\",\n      color: \"white\",\n    },\n  })\n)(TableRow);\n\nfunction createData(name: string, calories: string) {\n  return { name, calories };\n}\n\nconst rows = [\n  createData(\"6Q18C18W14L5T\", \"FORERUNNER\"),\n  createData(\"7T5L1F5\", \"GRENADE\"),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 100,\n  },\n});\n\nconst Content = () => {\n  const classes = useStyles();\n\n  const isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  return (\n    <div\n      className=\"Content\"\n      style={{\n        width: isPortrait ? \"90%\" : \"70%\",\n      }}\n    >\n      <h1>Calender Problem</h1>\n      <p>\n        After the \"distraction\" had spread sufficient chaos, Chief reaches back\n        to the crashed ship, where Echo 419 informs that he received a\n        transmission from a UNSC ship! Chief and 419 send a transmission to the\n        frigate. The message was sent on 16/03/3008 which was a Monday is\n        estimated to reach them on 1/04/3012.\n        <br />\n        <ul  className=\"list\"\n      style={{\n       textAlign: \"left\"\n      }}>\n          <li>\n            In the planet's calender a year has 10 months , a month has 5 weeks\n            and a week has 5 days (namely Monday, Tuesday, Wednesday, Thursday,\n            Friday).\n          </li>\n          <li>\n            A leap year comes in 4 years and is completely divisible by 4. That\n            year has one extra day in the last month i.e. the 10th month on the\n            planet.\n          </li>\n        </ul>\n        <br />\n        Estimate at which day of the week the frigate will receive Chief's\n        message.\n        <br />\n      </p>\n\n      <br />\n\n      <InputField />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Footer = () => {\n\tconst isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tfontSize: 25,\n\t\t\t\tmargin: \"auto\",\n\t\t\t\twidth: isPortrait ? \"90%\" : \"70%\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: \"1px solid #fbecec\",\n\t\t\t\t\tpadding: \"20px 10px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAfter every round you have to fill the google form given below.\n\t\t\t\t This is important as it\n\t\t\t\t\twill acounts for your participation.\n\t\t\t\t</p>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\thref=\"https://forms.gle/E84EpvvRNNADsyXQ7\"\n\t\t\t\t>\n\t\t\t\t\tClick here to submit you participation!\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<p>\n\t\t\t\tFollow us on{\" \"}\n\t\t\t\t<a href=\"https://www.instagram.com/roundtabledtu/\">\n\t\t\t\t\t<InstagramIcon style={{ fontSize: 25 }} />\n\t\t\t\t</a>{\" \"}\n\t\t\t\t<a href=\"https://www.linkedin.com/company/round-table-dtu/mycompany/\">\n\t\t\t\t\t<LinkedInIcon style={{ fontSize: 25 }} />\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Footer;\n","import React, {Component} from \"react\";\nimport \"./roun1.css\";\n\n\nimport Bounce from \"react-reveal/Bounce\";\nimport Content from \"../Components/Content\";\nimport Footer from \"../Components/Footer\";\n\n\nclass Round1 extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div>\n                    <Bounce top>\n                        <h1>Hunt The Code</h1>\n                    </Bounce>\n                    <Bounce top delay=\"200\">\n                        <h2 className=\"Heading\">Round 4</h2>\n                    </Bounce>\n                    <Bounce top delay=\"600\">\n                        <Content/>\n                    </Bounce>\n                </div>\n                <br/>\n                <br/>\n                <Bounce bottom>\n                    <Footer/>\n                </Bounce>\n            </div>\n        );\n    }\n}\n\nexport default Round1;\n","import React from 'react';\nimport { Switch,Route } from 'react-router-dom';\n\nimport Round1 from \"./Views/Round1\";\nconst Routes = (props) => {\n    return (\n        <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Round1}/>\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React, {Component} from \"react\";\nimport \"./Views/roun1.css\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport {NotificationContainer} from \"react-notifications\";\n\nimport Router from \"./Routes\";\nimport {BrowserRouter} from 'react-router-dom';\n\nclass App extends Component {\n    render() {\n        return (\n            // TODO: add link of round 2\n            // TODO: add instruction conectivity\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Router/>\n                    <NotificationContainer/>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}